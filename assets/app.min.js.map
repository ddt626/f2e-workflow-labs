{"version":3,"sources":["app.module.js","admin/admin.module.js","dashboard/dashboard.module.js","core/core.module.js","layout/layout.module.js","widgets/widgets.module.js","blocks/exception/exception.module.js","blocks/logger/logger.module.js","blocks/router/router.module.js","admin/admin.controller.js","admin/admin.route.js","dashboard/dashboard.controller.js","dashboard/dashboard.route.js","core/config.js","core/constants.js","core/core.route.js","core/dataservice.js","layout/ht-sidebar.directive.js","layout/ht-top-nav.directive.js","layout/shell.controller.js","layout/sidebar.controller.js","widgets/ht-img-person.directive.js","widgets/ht-widget-header.directive.js","blocks/exception/exception-handler.provider.js","blocks/exception/exception.js","blocks/logger/logger.js","blocks/router/router-helper.provider.js"],"names":["angular","module","AdminController","logger","activate","info","vm","this","title","controller","$inject","appRun","routerHelper","configureStates","getStates","state","config","url","templateUrl","controllerAs","settings","nav","content","run","DashboardController","$q","dataservice","promises","getMessageCount","getPeople","all","then","data","messageCount","people","news","description","toastrConfig","toastr","options","timeOut","positionClass","configure","$logProvider","routerHelperProvider","exceptionHandlerProvider","debugEnabled","appErrorPrefix","docTitle","appTitle","core","value","constant","moment","otherwise","$http","exception","when","success","response","fail","e","catcher","get","service","factory","htSidebar","link","scope","element","attrs","dropdown","dropClass","preventDefault","$dropdownElement","hasClass","removeClass","$sidebarInner","slideUp","whenDoneAnimating","slideDown","addClass","find","click","directive","restrict","htTopNav","TopNavController","bindToController","navline","ShellController","$rootScope","$timeout","hideSplash","showSplash","busyMessage","isBusy","text","SidebarController","$state","getNavRoutes","navRoutes","states","filter","r","sort","r1","r2","isCurrent","route","current","menuName","substr","length","htImgPerson","$observe","basePath","unknownImage","$set","imageBasePath","unknownPersonImageSource","htWidgetHeader","subtitle","rightText","allowCollapse","undefined","$get","$provide","decorator","extendExceptionHandler","$delegate","exceptionHandler","cause","errorData","message","error","provider","thrownDescription","newMessage","reject","$log","warning","warn","showToasts","log","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$location","otherwisePath","forEach","resolve","extend","resolveAlways","hasOtherwise","handleRoutingErrors","$on","event","toState","toParams","fromState","fromParams","handlingStateChangeError","stateCounts","errors","destination","name","loadedTemplateUrl","msg","statusText","status","path","init","updateDocTitle","changes","html5Mode","cfg"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('app', [\r\n        'app.core',\r\n        'app.widgets',\r\n        'app.admin',\r\n        'app.dashboard',\r\n        'app.layout'\r\n    ]);\r\n\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.admin', [\r\n        'app.core',\r\n        'app.widgets'\r\n      ]);\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('app.dashboard', [\r\n        'app.core',\r\n        'app.widgets'\r\n      ]);\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.core', [\r\n            'ngAnimate', 'ngSanitize',\r\n            'blocks.exception', 'blocks.logger', 'blocks.router',\r\n            'ui.router', 'ngplus'\r\n        ]);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('app.layout', ['app.core']);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('app.widgets', []);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('blocks.exception', ['blocks.logger']);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('blocks.logger', []);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular.module('blocks.router', [\r\n        'ui.router',\r\n        'blocks.logger'\r\n    ]);\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.admin')\r\n        .controller('AdminController', AdminController);\r\n\r\n    AdminController.$inject = ['logger'];\r\n    /* @ngInject */\r\n    function AdminController(logger) {\r\n        var vm = this;\r\n        vm.title = 'Admin';\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            logger.info('Activated Admin View');\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.admin')\r\n        .run(appRun);\r\n\r\n    appRun.$inject = ['routerHelper'];\r\n    /* @ngInject */\r\n    function appRun(routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [\r\n            {\r\n                state: 'admin',\r\n                config: {\r\n                    url: '/admin',\r\n                    templateUrl: 'app/admin/admin.html',\r\n                    controller: 'AdminController',\r\n                    controllerAs: 'vm',\r\n                    title: 'Admin',\r\n                    settings: {\r\n                        nav: 2,\r\n                        content: '<i class=\"fa fa-lock\"></i> Admin'\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.dashboard')\r\n        .controller('DashboardController', DashboardController);\r\n\r\n    DashboardController.$inject = ['$q', 'dataservice', 'logger'];\r\n    /* @ngInject */\r\n    function DashboardController($q, dataservice, logger) {\r\n        var vm = this;\r\n        vm.news = {\r\n            title: 'hottowel',\r\n            description: 'Hot Towel Angular is a SPA template for Angular developers.'\r\n        };\r\n        vm.messageCount = 0;\r\n        vm.people = [];\r\n        vm.title = 'Dashboard';\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            var promises = [getMessageCount(), getPeople()];\r\n            return $q.all(promises).then(function() {\r\n                logger.info('Activated Dashboard View');\r\n            });\r\n        }\r\n\r\n        function getMessageCount() {\r\n            return dataservice.getMessageCount().then(function (data) {\r\n                vm.messageCount = data;\r\n                return vm.messageCount;\r\n            });\r\n        }\r\n\r\n        function getPeople() {\r\n            return dataservice.getPeople().then(function (data) {\r\n                vm.people = data;\r\n                return vm.people;\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.dashboard')\r\n        .run(appRun);\r\n\r\n    appRun.$inject = ['routerHelper'];\r\n    /* @ngInject */\r\n    function appRun(routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [\r\n            {\r\n                state: 'dashboard',\r\n                config: {\r\n                    url: '/',\r\n                    templateUrl: 'app/dashboard/dashboard.html',\r\n                    controller: 'DashboardController',\r\n                    controllerAs: 'vm',\r\n                    title: 'dashboard',\r\n                    settings: {\r\n                        nav: 1,\r\n                        content: '<i class=\"fa fa-dashboard\"></i> Dashboard'\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    var core = angular.module('app.core');\r\n\r\n    core.config(toastrConfig);\r\n\r\n    toastrConfig.$inject = ['toastr'];\r\n    /* @ngInject */\r\n    function toastrConfig(toastr) {\r\n        toastr.options.timeOut = 4000;\r\n        toastr.options.positionClass = 'toast-bottom-right';\r\n    }\r\n\r\n    var config = {\r\n        appErrorPrefix: '[hottowel Error] ',\r\n        appTitle: 'hottowel'\r\n    };\r\n\r\n    core.value('config', config);\r\n\r\n    core.config(configure);\r\n\r\n    configure.$inject = ['$logProvider', 'routerHelperProvider', 'exceptionHandlerProvider'];\r\n    /* @ngInject */\r\n    function configure($logProvider, routerHelperProvider, exceptionHandlerProvider) {\r\n        if ($logProvider.debugEnabled) {\r\n            $logProvider.debugEnabled(true);\r\n        }\r\n        exceptionHandlerProvider.configure(config.appErrorPrefix);\r\n        routerHelperProvider.configure({docTitle: config.appTitle + ': '});\r\n    }\r\n\r\n})();\r\n","/* global toastr:false, moment:false */\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.core')\r\n        .constant('toastr', toastr)\r\n        .constant('moment', moment);\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.core')\r\n        .run(appRun);\r\n\r\n    /* @ngInject */\r\n    function appRun(routerHelper) {\r\n        var otherwise = '/404';\r\n        routerHelper.configureStates(getStates(), otherwise);\r\n    }\r\n\r\n    function getStates() {\r\n        return [\r\n            {\r\n                state: '404',\r\n                config: {\r\n                    url: '/404',\r\n                    templateUrl: 'app/core/404.html',\r\n                    title: '404'\r\n                }\r\n            }\r\n        ];\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.core')\r\n        .factory('dataservice', dataservice);\r\n\r\n    dataservice.$inject = ['$http', '$q', 'exception', 'logger'];\r\n    /* @ngInject */\r\n    function dataservice($http, $q, exception, logger) {\r\n        var service = {\r\n            getPeople: getPeople,\r\n            getMessageCount: getMessageCount\r\n        };\r\n\r\n        return service;\r\n\r\n        function getMessageCount() { return $q.when(72); }\r\n\r\n        function getPeople() {\r\n            return $http.get('/api/people.json')\r\n                .then(success)\r\n                .catch(fail);\r\n\r\n            function success(response) {\r\n                return response.data;\r\n            }\r\n\r\n            function fail(e) {\r\n                return exception.catcher('XHR Failed for getPeople')(e);\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.layout')\r\n        .directive('htSidebar', htSidebar);\r\n\r\n    /* @ngInject */\r\n    function htSidebar () {\r\n        // Opens and closes the sidebar menu.\r\n        // Usage:\r\n        //  <div ht-sidebar\">\r\n        //  <div ht-sidebar whenDoneAnimating=\"vm.sidebarReady()\">\r\n        // Creates:\r\n        //  <div ht-sidebar class=\"sidebar\">\r\n        var directive = {\r\n            link: link,\r\n            restrict: 'EA',\r\n            scope: {\r\n                whenDoneAnimating: '&?'\r\n            }\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs) {\r\n            var $sidebarInner = element.find('.sidebar-inner');\r\n            var $dropdownElement = element.find('.sidebar-dropdown a');\r\n            element.addClass('sidebar');\r\n            $dropdownElement.click(dropdown);\r\n\r\n            function dropdown(e) {\r\n                var dropClass = 'dropy';\r\n                e.preventDefault();\r\n                if (!$dropdownElement.hasClass(dropClass)) {\r\n                    $sidebarInner.slideDown(350, scope.whenDoneAnimating);\r\n                    $dropdownElement.addClass(dropClass);\r\n                } else if ($dropdownElement.hasClass(dropClass)) {\r\n                    $dropdownElement.removeClass(dropClass);\r\n                    $sidebarInner.slideUp(350, scope.whenDoneAnimating);\r\n                }\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.layout')\r\n        .directive('htTopNav', htTopNav);\r\n\r\n    /* @ngInject */\r\n    function htTopNav () {\r\n        var directive = {\r\n            bindToController: true,\r\n            controller: TopNavController,\r\n            controllerAs: 'vm',\r\n            restrict: 'EA',\r\n            scope: {\r\n                'navline': '='\r\n            },\r\n            templateUrl: 'app/layout/ht-top-nav.html'\r\n        };\r\n\r\n        /* @ngInject */\r\n        function TopNavController() {\r\n            var vm = this;\r\n        }\r\n\r\n        return directive;\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.layout')\r\n        .controller('ShellController', ShellController);\r\n\r\n    ShellController.$inject = ['$rootScope', '$timeout', 'config', 'logger'];\r\n    /* @ngInject */\r\n    function ShellController($rootScope, $timeout, config, logger) {\r\n        var vm = this;\r\n        vm.busyMessage = 'Please wait ...';\r\n        vm.isBusy = true;\r\n        $rootScope.showSplash = true;\r\n        vm.navline = {\r\n            title: config.appTitle,\r\n            text: 'Created by John Papa',\r\n            link: 'http://twitter.com/john_papa'\r\n        };\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            logger.success(config.appTitle + ' loaded!', null);\r\n            hideSplash();\r\n        }\r\n\r\n        function hideSplash() {\r\n            //Force a 1 second delay so we can see the splash.\r\n            $timeout(function() {\r\n                $rootScope.showSplash = false;\r\n            }, 1000);\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.layout')\r\n        .controller('SidebarController', SidebarController);\r\n\r\n    SidebarController.$inject = ['$state', 'routerHelper'];\r\n    /* @ngInject */\r\n    function SidebarController($state, routerHelper) {\r\n        var vm = this;\r\n        var states = routerHelper.getStates();\r\n        vm.isCurrent = isCurrent;\r\n\r\n        activate();\r\n\r\n        function activate() { getNavRoutes(); }\r\n\r\n        function getNavRoutes() {\r\n            vm.navRoutes = states.filter(function(r) {\r\n                return r.settings && r.settings.nav;\r\n            }).sort(function(r1, r2) {\r\n                return r1.settings.nav - r2.settings.nav;\r\n            });\r\n        }\r\n\r\n        function isCurrent(route) {\r\n            if (!route.title || !$state.current || !$state.current.title) {\r\n                return '';\r\n            }\r\n            var menuName = route.title;\r\n            return $state.current.title.substr(0, menuName.length) === menuName ? 'current' : '';\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.widgets')\r\n        .directive('htImgPerson', htImgPerson);\r\n\r\n    htImgPerson.$inject = ['config'];\r\n    /* @ngInject */\r\n    function htImgPerson (config) {\r\n        //Usage:\r\n        //<img ht-img-person=\"{{person.imageSource}}\"/>\r\n        var basePath = config.imageBasePath;\r\n        var unknownImage = config.unknownPersonImageSource;\r\n        var directive = {\r\n            link: link,\r\n            restrict: 'A'\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs) {\r\n            attrs.$observe('htImgPerson', function (value) {\r\n                value = basePath + (value || unknownImage);\r\n                attrs.$set('src', value);\r\n            });\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.widgets')\r\n        .directive('htWidgetHeader', htWidgetHeader);\r\n\r\n    /* @ngInject */\r\n    function htWidgetHeader() {\r\n        //Usage:\r\n        //<div ht-widget-header title=\"vm.map.title\"></div>\r\n        // Creates:\r\n        // <div ht-widget-header=\"\"\r\n        //      title=\"Movie\"\r\n        //      allow-collapse=\"true\" </div>\r\n        var directive = {\r\n            scope: {\r\n                'title': '@',\r\n                'subtitle': '@',\r\n                'rightText': '@',\r\n                'allowCollapse': '@'\r\n            },\r\n            templateUrl: 'app/widgets/widget-header.html',\r\n            restrict: 'EA'\r\n        };\r\n        return directive;\r\n    }\r\n})();\r\n","// Include in index.html so that app level exceptions are handled.\r\n// Exclude from testRunner.html which should run exactly what it wants to run\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('blocks.exception')\r\n        .provider('exceptionHandler', exceptionHandlerProvider)\r\n        .config(config);\r\n\r\n    /**\r\n     * Must configure the exception handling\r\n     */\r\n    function exceptionHandlerProvider() {\r\n        /* jshint validthis:true */\r\n        this.config = {\r\n            appErrorPrefix: undefined\r\n        };\r\n\r\n        this.configure = function (appErrorPrefix) {\r\n            this.config.appErrorPrefix = appErrorPrefix;\r\n        };\r\n\r\n        this.$get = function() {\r\n            return {config: this.config};\r\n        };\r\n    }\r\n\r\n    config.$inject = ['$provide'];\r\n\r\n    /**\r\n     * Configure by setting an optional string value for appErrorPrefix.\r\n     * Accessible via config.appErrorPrefix (via config value).\r\n     * @param  {Object} $provide\r\n     */\r\n    /* @ngInject */\r\n    function config($provide) {\r\n        $provide.decorator('$exceptionHandler', extendExceptionHandler);\r\n    }\r\n\r\n    extendExceptionHandler.$inject = ['$delegate', 'exceptionHandler', 'logger'];\r\n\r\n    /**\r\n     * Extend the $exceptionHandler service to also display a toast.\r\n     * @param  {Object} $delegate\r\n     * @param  {Object} exceptionHandler\r\n     * @param  {Object} logger\r\n     * @return {Function} the decorated $exceptionHandler service\r\n     */\r\n    function extendExceptionHandler($delegate, exceptionHandler, logger) {\r\n        return function(exception, cause) {\r\n            var appErrorPrefix = exceptionHandler.config.appErrorPrefix || '';\r\n            var errorData = {exception: exception, cause: cause};\r\n            exception.message = appErrorPrefix + exception.message;\r\n            $delegate(exception, cause);\r\n            /**\r\n             * Could add the error to a service's collection,\r\n             * add errors to $rootScope, log errors to remote web server,\r\n             * or log locally. Or throw hard. It is entirely up to you.\r\n             * throw exception;\r\n             *\r\n             * @example\r\n             *     throw { message: 'error message we added' };\r\n             */\r\n            logger.error(exception.message, errorData);\r\n        };\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('blocks.exception')\r\n        .factory('exception', exception);\r\n\r\n    /* @ngInject */\r\n    function exception($q, logger) {\r\n        var service = {\r\n            catcher: catcher\r\n        };\r\n        return service;\r\n\r\n        function catcher(message) {\r\n            return function(e) {\r\n                var thrownDescription;\r\n                var newMessage;\r\n                if (e.data && e.data.description) {\r\n                    thrownDescription = '\\n' + e.data.description;\r\n                    newMessage = message + thrownDescription;\r\n                }\r\n                e.data.description = newMessage;\r\n                logger.error(newMessage);\r\n                return $q.reject(e);\r\n            };\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('blocks.logger')\r\n        .factory('logger', logger);\r\n\r\n    logger.$inject = ['$log', 'toastr'];\r\n\r\n    /* @ngInject */\r\n    function logger($log, toastr) {\r\n        var service = {\r\n            showToasts: true,\r\n\r\n            error   : error,\r\n            info    : info,\r\n            success : success,\r\n            warning : warning,\r\n\r\n            // straight to console; bypass toastr\r\n            log     : $log.log\r\n        };\r\n\r\n        return service;\r\n        /////////////////////\r\n\r\n        function error(message, data, title) {\r\n            toastr.error(message, title);\r\n            $log.error('Error: ' + message, data);\r\n        }\r\n\r\n        function info(message, data, title) {\r\n            toastr.info(message, title);\r\n            $log.info('Info: ' + message, data);\r\n        }\r\n\r\n        function success(message, data, title) {\r\n            toastr.success(message, title);\r\n            $log.info('Success: ' + message, data);\r\n        }\r\n\r\n        function warning(message, data, title) {\r\n            toastr.warning(message, title);\r\n            $log.warn('Warning: ' + message, data);\r\n        }\r\n    }\r\n}());\r\n","/* Help configure the state-base ui.router */\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('blocks.router')\r\n        .provider('routerHelper', routerHelperProvider);\r\n\r\n    routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n    /* @ngInject */\r\n    function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n        /* jshint validthis:true */\r\n        var config = {\r\n            docTitle: undefined,\r\n            resolveAlways: {}\r\n        };\r\n\r\n        $locationProvider.html5Mode(true);\r\n\r\n        this.configure = function(cfg) {\r\n            angular.extend(config, cfg);\r\n        };\r\n\r\n        this.$get = RouterHelper;\r\n        RouterHelper.$inject = ['$location', '$rootScope', '$state', 'logger'];\r\n        /* @ngInject */\r\n        function RouterHelper($location, $rootScope, $state, logger) {\r\n            var handlingStateChangeError = false;\r\n            var hasOtherwise = false;\r\n            var stateCounts = {\r\n                errors: 0,\r\n                changes: 0\r\n            };\r\n\r\n            var service = {\r\n                configureStates: configureStates,\r\n                getStates: getStates,\r\n                stateCounts: stateCounts\r\n            };\r\n\r\n            init();\r\n\r\n            return service;\r\n\r\n            ///////////////\r\n\r\n            function configureStates(states, otherwisePath) {\r\n                states.forEach(function(state) {\r\n                    state.config.resolve =\r\n                        angular.extend(state.config.resolve || {}, config.resolveAlways);\r\n                    $stateProvider.state(state.state, state.config);\r\n                });\r\n                if (otherwisePath && !hasOtherwise) {\r\n                    hasOtherwise = true;\r\n                    $urlRouterProvider.otherwise(otherwisePath);\r\n                }\r\n            }\r\n\r\n            function handleRoutingErrors() {\r\n                // Route cancellation:\r\n                // On routing error, go to the dashboard.\r\n                // Provide an exit clause if it tries to do it twice.\r\n                $rootScope.$on('$stateChangeError',\r\n                    function(event, toState, toParams, fromState, fromParams, error) {\r\n                        if (handlingStateChangeError) {\r\n                            return;\r\n                        }\r\n                        stateCounts.errors++;\r\n                        handlingStateChangeError = true;\r\n                        var destination = (toState &&\r\n                            (toState.title || toState.name || toState.loadedTemplateUrl)) ||\r\n                            'unknown target';\r\n                        var msg = 'Error routing to ' + destination + '. ' +\r\n                            (error.data || '') + '. <br/>' + (error.statusText || '') +\r\n                            ': ' + (error.status || '');\r\n                        logger.warning(msg, [toState]);\r\n                        $location.path('/');\r\n                    }\r\n                );\r\n            }\r\n\r\n            function init() {\r\n                handleRoutingErrors();\r\n                updateDocTitle();\r\n            }\r\n\r\n            function getStates() { return $state.get(); }\r\n\r\n            function updateDocTitle() {\r\n                $rootScope.$on('$stateChangeSuccess',\r\n                    function(event, toState, toParams, fromState, fromParams) {\r\n                        stateCounts.changes++;\r\n                        handlingStateChangeError = false;\r\n                        var title = config.docTitle + ' ' + (toState.title || '');\r\n                        $rootScope.title = title; // data bind to <title>\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n})();\r\n"],"sourceRoot":"/source/"}