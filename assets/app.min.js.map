{"version":3,"sources":["app.js"],"names":["angular","module","AdminController","logger","activate","info","vm","this","title","controller","$inject","appRun","routerHelper","configureStates","getStates","state","config","url","templateUrl","controllerAs","settings","nav","content","run","toastrConfig","toastr","options","timeOut","positionClass","configure","$logProvider","routerHelperProvider","exceptionHandlerProvider","debugEnabled","appErrorPrefix","docTitle","appTitle","core","value","constant","moment","otherwise","dataservice","$http","$q","exception","getMessageCount","when","getPeople","success","response","data","fail","e","catcher","get","then","service","factory","DashboardController","promises","all","messageCount","people","news","description","htSidebar","link","scope","element","attrs","dropdown","dropClass","preventDefault","$dropdownElement","hasClass","removeClass","$sidebarInner","slideUp","whenDoneAnimating","slideDown","addClass","find","click","directive","restrict","htTopNav","TopNavController","bindToController","navline","ShellController","$rootScope","$timeout","hideSplash","showSplash","busyMessage","isBusy","text","SidebarController","$state","getNavRoutes","navRoutes","states","filter","r","sort","r1","r2","isCurrent","route","current","menuName","substr","length","htImgPerson","$observe","basePath","unknownImage","$set","imageBasePath","unknownPersonImageSource","htWidgetHeader","subtitle","rightText","allowCollapse","undefined","$get","$provide","decorator","extendExceptionHandler","$delegate","exceptionHandler","cause","errorData","message","error","provider","thrownDescription","newMessage","reject","$log","warning","warn","showToasts","log","$locationProvider","$stateProvider","$urlRouterProvider","RouterHelper","$location","otherwisePath","forEach","resolve","extend","resolveAlways","hasOtherwise","handleRoutingErrors","$on","event","toState","toParams","fromState","fromParams","handlingStateChangeError","stateCounts","errors","destination","name","loadedTemplateUrl","msg","statusText","status","path","init","updateDocTitle","changes","html5Mode","cfg"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('app', [\r\n        'app.core',\r\n        'app.widgets',\r\n        'app.admin',\r\n        'app.dashboard',\r\n        'app.layout'\r\n    ]);\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('app.admin', [\r\n        'app.core',\r\n        'app.widgets'\r\n      ]);\r\n\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.core', [\r\n            'ngAnimate', 'ngSanitize',\r\n            'blocks.exception', 'blocks.logger', 'blocks.router',\r\n            'ui.router', 'ngplus'\r\n        ]);\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('app.dashboard', [\r\n        'app.core',\r\n        'app.widgets'\r\n      ]);\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('app.layout', ['app.core']);\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('app.widgets', []);\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('blocks.exception', ['blocks.logger']);\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('blocks.logger', []);\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular.module('blocks.router', [\r\n        'ui.router',\r\n        'blocks.logger'\r\n    ]);\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.admin')\r\n        .controller('AdminController', AdminController);\r\n\r\n    AdminController.$inject = ['logger'];\r\n    /* @ngInject */\r\n    function AdminController(logger) {\r\n        var vm = this;\r\n        vm.title = 'Admin';\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            logger.info('Activated Admin View');\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.admin')\r\n        .run(appRun);\r\n\r\n    appRun.$inject = ['routerHelper'];\r\n    /* @ngInject */\r\n    function appRun(routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [\r\n            {\r\n                state: 'admin',\r\n                config: {\r\n                    url: '/admin',\r\n                    templateUrl: 'app/admin/admin.html',\r\n                    controller: 'AdminController',\r\n                    controllerAs: 'vm',\r\n                    title: 'Admin',\r\n                    settings: {\r\n                        nav: 2,\r\n                        content: '<i class=\"fa fa-lock\"></i> Admin'\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    var core = angular.module('app.core');\r\n\r\n    core.config(toastrConfig);\r\n\r\n    toastrConfig.$inject = ['toastr'];\r\n    /* @ngInject */\r\n    function toastrConfig(toastr) {\r\n        toastr.options.timeOut = 4000;\r\n        toastr.options.positionClass = 'toast-bottom-right';\r\n    }\r\n\r\n    var config = {\r\n        appErrorPrefix: '[hottowel Error] ',\r\n        appTitle: 'hottowel'\r\n    };\r\n\r\n    core.value('config', config);\r\n\r\n    core.config(configure);\r\n\r\n    configure.$inject = ['$logProvider', 'routerHelperProvider', 'exceptionHandlerProvider'];\r\n    /* @ngInject */\r\n    function configure($logProvider, routerHelperProvider, exceptionHandlerProvider) {\r\n        if ($logProvider.debugEnabled) {\r\n            $logProvider.debugEnabled(true);\r\n        }\r\n        exceptionHandlerProvider.configure(config.appErrorPrefix);\r\n        routerHelperProvider.configure({docTitle: config.appTitle + ': '});\r\n    }\r\n\r\n})();\r\n\n/* global toastr:false, moment:false */\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.core')\r\n        .constant('toastr', toastr)\r\n        .constant('moment', moment);\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.core')\r\n        .run(appRun);\r\n\r\n    /* @ngInject */\r\n    function appRun(routerHelper) {\r\n        var otherwise = '/404';\r\n        routerHelper.configureStates(getStates(), otherwise);\r\n    }\r\n\r\n    function getStates() {\r\n        return [\r\n            {\r\n                state: '404',\r\n                config: {\r\n                    url: '/404',\r\n                    templateUrl: 'app/core/404.html',\r\n                    title: '404'\r\n                }\r\n            }\r\n        ];\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.core')\r\n        .factory('dataservice', dataservice);\r\n\r\n    dataservice.$inject = ['$http', '$q', 'exception', 'logger'];\r\n    /* @ngInject */\r\n    function dataservice($http, $q, exception, logger) {\r\n        var service = {\r\n            getPeople: getPeople,\r\n            getMessageCount: getMessageCount\r\n        };\r\n\r\n        return service;\r\n\r\n        function getMessageCount() { return $q.when(72); }\r\n\r\n        function getPeople() {\r\n            return $http.get('/api/people.json')\r\n                .then(success)\r\n                .catch(fail);\r\n\r\n            function success(response) {\r\n                return response.data;\r\n            }\r\n\r\n            function fail(e) {\r\n                return exception.catcher('XHR Failed for getPeople')(e);\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.dashboard')\r\n        .controller('DashboardController', DashboardController);\r\n\r\n    DashboardController.$inject = ['$q', 'dataservice', 'logger'];\r\n    /* @ngInject */\r\n    function DashboardController($q, dataservice, logger) {\r\n        var vm = this;\r\n        vm.news = {\r\n            title: 'hottowel',\r\n            description: 'Hot Towel Angular is a SPA template for Angular developers.'\r\n        };\r\n        vm.messageCount = 0;\r\n        vm.people = [];\r\n        vm.title = 'Dashboard';\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            var promises = [getMessageCount(), getPeople()];\r\n            return $q.all(promises).then(function() {\r\n                logger.info('Activated Dashboard View');\r\n            });\r\n        }\r\n\r\n        function getMessageCount() {\r\n            return dataservice.getMessageCount().then(function (data) {\r\n                vm.messageCount = data;\r\n                return vm.messageCount;\r\n            });\r\n        }\r\n\r\n        function getPeople() {\r\n            return dataservice.getPeople().then(function (data) {\r\n                vm.people = data;\r\n                return vm.people;\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.dashboard')\r\n        .run(appRun);\r\n\r\n    appRun.$inject = ['routerHelper'];\r\n    /* @ngInject */\r\n    function appRun(routerHelper) {\r\n        routerHelper.configureStates(getStates());\r\n    }\r\n\r\n    function getStates() {\r\n        return [\r\n            {\r\n                state: 'dashboard',\r\n                config: {\r\n                    url: '/',\r\n                    templateUrl: 'app/dashboard/dashboard.html',\r\n                    controller: 'DashboardController',\r\n                    controllerAs: 'vm',\r\n                    title: 'dashboard',\r\n                    settings: {\r\n                        nav: 1,\r\n                        content: '<i class=\"fa fa-dashboard\"></i> Dashboard'\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.layout')\r\n        .directive('htSidebar', htSidebar);\r\n\r\n    /* @ngInject */\r\n    function htSidebar () {\r\n        // Opens and closes the sidebar menu.\r\n        // Usage:\r\n        //  <div ht-sidebar\">\r\n        //  <div ht-sidebar whenDoneAnimating=\"vm.sidebarReady()\">\r\n        // Creates:\r\n        //  <div ht-sidebar class=\"sidebar\">\r\n        var directive = {\r\n            link: link,\r\n            restrict: 'EA',\r\n            scope: {\r\n                whenDoneAnimating: '&?'\r\n            }\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs) {\r\n            var $sidebarInner = element.find('.sidebar-inner');\r\n            var $dropdownElement = element.find('.sidebar-dropdown a');\r\n            element.addClass('sidebar');\r\n            $dropdownElement.click(dropdown);\r\n\r\n            function dropdown(e) {\r\n                var dropClass = 'dropy';\r\n                e.preventDefault();\r\n                if (!$dropdownElement.hasClass(dropClass)) {\r\n                    $sidebarInner.slideDown(350, scope.whenDoneAnimating);\r\n                    $dropdownElement.addClass(dropClass);\r\n                } else if ($dropdownElement.hasClass(dropClass)) {\r\n                    $dropdownElement.removeClass(dropClass);\r\n                    $sidebarInner.slideUp(350, scope.whenDoneAnimating);\r\n                }\r\n            }\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.layout')\r\n        .directive('htTopNav', htTopNav);\r\n\r\n    /* @ngInject */\r\n    function htTopNav () {\r\n        var directive = {\r\n            bindToController: true,\r\n            controller: TopNavController,\r\n            controllerAs: 'vm',\r\n            restrict: 'EA',\r\n            scope: {\r\n                'navline': '='\r\n            },\r\n            templateUrl: 'app/layout/ht-top-nav.html'\r\n        };\r\n\r\n        /* @ngInject */\r\n        function TopNavController() {\r\n            var vm = this;\r\n        }\r\n\r\n        return directive;\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.layout')\r\n        .controller('ShellController', ShellController);\r\n\r\n    ShellController.$inject = ['$rootScope', '$timeout', 'config', 'logger'];\r\n    /* @ngInject */\r\n    function ShellController($rootScope, $timeout, config, logger) {\r\n        var vm = this;\r\n        vm.busyMessage = 'Please wait ...';\r\n        vm.isBusy = true;\r\n        $rootScope.showSplash = true;\r\n        vm.navline = {\r\n            title: config.appTitle,\r\n            text: 'Created by John Papa',\r\n            link: 'http://twitter.com/john_papa'\r\n        };\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            logger.success(config.appTitle + ' loaded!', null);\r\n            hideSplash();\r\n        }\r\n\r\n        function hideSplash() {\r\n            //Force a 1 second delay so we can see the splash.\r\n            $timeout(function() {\r\n                $rootScope.showSplash = false;\r\n            }, 1000);\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.layout')\r\n        .controller('SidebarController', SidebarController);\r\n\r\n    SidebarController.$inject = ['$state', 'routerHelper'];\r\n    /* @ngInject */\r\n    function SidebarController($state, routerHelper) {\r\n        var vm = this;\r\n        var states = routerHelper.getStates();\r\n        vm.isCurrent = isCurrent;\r\n\r\n        activate();\r\n\r\n        function activate() { getNavRoutes(); }\r\n\r\n        function getNavRoutes() {\r\n            vm.navRoutes = states.filter(function(r) {\r\n                return r.settings && r.settings.nav;\r\n            }).sort(function(r1, r2) {\r\n                return r1.settings.nav - r2.settings.nav;\r\n            });\r\n        }\r\n\r\n        function isCurrent(route) {\r\n            if (!route.title || !$state.current || !$state.current.title) {\r\n                return '';\r\n            }\r\n            var menuName = route.title;\r\n            return $state.current.title.substr(0, menuName.length) === menuName ? 'current' : '';\r\n        }\r\n    }\r\n})();\r\n\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.widgets')\r\n        .directive('htImgPerson', htImgPerson);\r\n\r\n    htImgPerson.$inject = ['config'];\r\n    /* @ngInject */\r\n    function htImgPerson (config) {\r\n        //Usage:\r\n        //<img ht-img-person=\"{{person.imageSource}}\"/>\r\n        var basePath = config.imageBasePath;\r\n        var unknownImage = config.unknownPersonImageSource;\r\n        var directive = {\r\n            link: link,\r\n            restrict: 'A'\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs) {\r\n            attrs.$observe('htImgPerson', function (value) {\r\n                value = basePath + (value || unknownImage);\r\n                attrs.$set('src', value);\r\n            });\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.widgets')\r\n        .directive('htWidgetHeader', htWidgetHeader);\r\n\r\n    /* @ngInject */\r\n    function htWidgetHeader() {\r\n        //Usage:\r\n        //<div ht-widget-header title=\"vm.map.title\"></div>\r\n        // Creates:\r\n        // <div ht-widget-header=\"\"\r\n        //      title=\"Movie\"\r\n        //      allow-collapse=\"true\" </div>\r\n        var directive = {\r\n            scope: {\r\n                'title': '@',\r\n                'subtitle': '@',\r\n                'rightText': '@',\r\n                'allowCollapse': '@'\r\n            },\r\n            templateUrl: 'app/widgets/widget-header.html',\r\n            restrict: 'EA'\r\n        };\r\n        return directive;\r\n    }\r\n})();\r\n\n// Include in index.html so that app level exceptions are handled.\r\n// Exclude from testRunner.html which should run exactly what it wants to run\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('blocks.exception')\r\n        .provider('exceptionHandler', exceptionHandlerProvider)\r\n        .config(config);\r\n\r\n    /**\r\n     * Must configure the exception handling\r\n     */\r\n    function exceptionHandlerProvider() {\r\n        /* jshint validthis:true */\r\n        this.config = {\r\n            appErrorPrefix: undefined\r\n        };\r\n\r\n        this.configure = function (appErrorPrefix) {\r\n            this.config.appErrorPrefix = appErrorPrefix;\r\n        };\r\n\r\n        this.$get = function() {\r\n            return {config: this.config};\r\n        };\r\n    }\r\n\r\n    config.$inject = ['$provide'];\r\n\r\n    /**\r\n     * Configure by setting an optional string value for appErrorPrefix.\r\n     * Accessible via config.appErrorPrefix (via config value).\r\n     * @param  {Object} $provide\r\n     */\r\n    /* @ngInject */\r\n    function config($provide) {\r\n        $provide.decorator('$exceptionHandler', extendExceptionHandler);\r\n    }\r\n\r\n    extendExceptionHandler.$inject = ['$delegate', 'exceptionHandler', 'logger'];\r\n\r\n    /**\r\n     * Extend the $exceptionHandler service to also display a toast.\r\n     * @param  {Object} $delegate\r\n     * @param  {Object} exceptionHandler\r\n     * @param  {Object} logger\r\n     * @return {Function} the decorated $exceptionHandler service\r\n     */\r\n    function extendExceptionHandler($delegate, exceptionHandler, logger) {\r\n        return function(exception, cause) {\r\n            var appErrorPrefix = exceptionHandler.config.appErrorPrefix || '';\r\n            var errorData = {exception: exception, cause: cause};\r\n            exception.message = appErrorPrefix + exception.message;\r\n            $delegate(exception, cause);\r\n            /**\r\n             * Could add the error to a service's collection,\r\n             * add errors to $rootScope, log errors to remote web server,\r\n             * or log locally. Or throw hard. It is entirely up to you.\r\n             * throw exception;\r\n             *\r\n             * @example\r\n             *     throw { message: 'error message we added' };\r\n             */\r\n            logger.error(exception.message, errorData);\r\n        };\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('blocks.exception')\r\n        .factory('exception', exception);\r\n\r\n    /* @ngInject */\r\n    function exception($q, logger) {\r\n        var service = {\r\n            catcher: catcher\r\n        };\r\n        return service;\r\n\r\n        function catcher(message) {\r\n            return function(e) {\r\n                var thrownDescription;\r\n                var newMessage;\r\n                if (e.data && e.data.description) {\r\n                    thrownDescription = '\\n' + e.data.description;\r\n                    newMessage = message + thrownDescription;\r\n                }\r\n                e.data.description = newMessage;\r\n                logger.error(newMessage);\r\n                return $q.reject(e);\r\n            };\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('blocks.logger')\r\n        .factory('logger', logger);\r\n\r\n    logger.$inject = ['$log', 'toastr'];\r\n\r\n    /* @ngInject */\r\n    function logger($log, toastr) {\r\n        var service = {\r\n            showToasts: true,\r\n\r\n            error   : error,\r\n            info    : info,\r\n            success : success,\r\n            warning : warning,\r\n\r\n            // straight to console; bypass toastr\r\n            log     : $log.log\r\n        };\r\n\r\n        return service;\r\n        /////////////////////\r\n\r\n        function error(message, data, title) {\r\n            toastr.error(message, title);\r\n            $log.error('Error: ' + message, data);\r\n        }\r\n\r\n        function info(message, data, title) {\r\n            toastr.info(message, title);\r\n            $log.info('Info: ' + message, data);\r\n        }\r\n\r\n        function success(message, data, title) {\r\n            toastr.success(message, title);\r\n            $log.info('Success: ' + message, data);\r\n        }\r\n\r\n        function warning(message, data, title) {\r\n            toastr.warning(message, title);\r\n            $log.warn('Warning: ' + message, data);\r\n        }\r\n    }\r\n}());\r\n\n/* Help configure the state-base ui.router */\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('blocks.router')\r\n        .provider('routerHelper', routerHelperProvider);\r\n\r\n    routerHelperProvider.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n    /* @ngInject */\r\n    function routerHelperProvider($locationProvider, $stateProvider, $urlRouterProvider) {\r\n        /* jshint validthis:true */\r\n        var config = {\r\n            docTitle: undefined,\r\n            resolveAlways: {}\r\n        };\r\n\r\n        $locationProvider.html5Mode(true);\r\n\r\n        this.configure = function(cfg) {\r\n            angular.extend(config, cfg);\r\n        };\r\n\r\n        this.$get = RouterHelper;\r\n        RouterHelper.$inject = ['$location', '$rootScope', '$state', 'logger'];\r\n        /* @ngInject */\r\n        function RouterHelper($location, $rootScope, $state, logger) {\r\n            var handlingStateChangeError = false;\r\n            var hasOtherwise = false;\r\n            var stateCounts = {\r\n                errors: 0,\r\n                changes: 0\r\n            };\r\n\r\n            var service = {\r\n                configureStates: configureStates,\r\n                getStates: getStates,\r\n                stateCounts: stateCounts\r\n            };\r\n\r\n            init();\r\n\r\n            return service;\r\n\r\n            ///////////////\r\n\r\n            function configureStates(states, otherwisePath) {\r\n                states.forEach(function(state) {\r\n                    state.config.resolve =\r\n                        angular.extend(state.config.resolve || {}, config.resolveAlways);\r\n                    $stateProvider.state(state.state, state.config);\r\n                });\r\n                if (otherwisePath && !hasOtherwise) {\r\n                    hasOtherwise = true;\r\n                    $urlRouterProvider.otherwise(otherwisePath);\r\n                }\r\n            }\r\n\r\n            function handleRoutingErrors() {\r\n                // Route cancellation:\r\n                // On routing error, go to the dashboard.\r\n                // Provide an exit clause if it tries to do it twice.\r\n                $rootScope.$on('$stateChangeError',\r\n                    function(event, toState, toParams, fromState, fromParams, error) {\r\n                        if (handlingStateChangeError) {\r\n                            return;\r\n                        }\r\n                        stateCounts.errors++;\r\n                        handlingStateChangeError = true;\r\n                        var destination = (toState &&\r\n                            (toState.title || toState.name || toState.loadedTemplateUrl)) ||\r\n                            'unknown target';\r\n                        var msg = 'Error routing to ' + destination + '. ' +\r\n                            (error.data || '') + '. <br/>' + (error.statusText || '') +\r\n                            ': ' + (error.status || '');\r\n                        logger.warning(msg, [toState]);\r\n                        $location.path('/');\r\n                    }\r\n                );\r\n            }\r\n\r\n            function init() {\r\n                handleRoutingErrors();\r\n                updateDocTitle();\r\n            }\r\n\r\n            function getStates() { return $state.get(); }\r\n\r\n            function updateDocTitle() {\r\n                $rootScope.$on('$stateChangeSuccess',\r\n                    function(event, toState, toParams, fromState, fromParams) {\r\n                        stateCounts.changes++;\r\n                        handlingStateChangeError = false;\r\n                        var title = config.docTitle + ' ' + (toState.title || '');\r\n                        $rootScope.title = title; // data bind to <title>\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n})();\r\n"],"sourceRoot":"/source/"}